<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #4582E7;
  stroke-width: 2px;
  shape-rendering: crispEdges;
}


#combobox{
  position: absolute;
  top: 45px;
  right: 10px;

}


.line {
  fill: none;
  stroke: #FFB42E;
  stroke-width: 4px;
}

.line2	 {
  fill: none;
  stroke: #FF2E57;
  stroke-width: 4px;
}



.dot {
  fill: #FFB42E;
  stroke: #FFB42E;
  stroke-width: 4px;
}

.dot1 {
  fill: #FF2E57;
  stroke: #FF2E57;
  stroke-width: 4px;
}

div.tooltip {   
  position: absolute;           
  text-align: center;           
  width: 60px;                  
  height: 28px;                 
  padding: 2px;             
  font: 12px sans-serif;        
  background: lightsteelblue;   
  border: 0px;      
  border-radius: 8px;           
  pointer-events: none;         
}

</style>
<select id="combobox" class="custom-combobox" name="n" onchange="auto(value)">
                        <option value="TSURU">TSURU</option>
                        <option value="POINTER1.8">POINTER1.8</option>
                        <option value="CHEVY">CHEVY</option>
                        <option value="SEDAN">SEDAN</option>
                        <option value="CHEVYC2">CHEVYC2</option>
                        <option value="ATOSBYDODGE">ATTOS</option>
                    </select>
<body>
<script src="http://d3js.org/d3.v3.js"></script>
<script>

var margin = {top: 20, right: 20, bottom: 30, left: 50},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var parseDate = d3.time.format("%d-%m-%Y").parse;

var x = d3.time.scale()
    .range([0, width]);
    

var y = d3.scale.linear()
    .range([height, 0]);


var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .ticks(4);


var line = d3.svg.line()
    .interpolate("step-before") 
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.close); });


var line2 = d3.svg.line()
    .interpolate("step-before")   
    .x(function(d) { return x(d.date2); })
    .y(function(d) { return y(d.close2); });



var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");



d3.tsv("data.tsv", function(error, data) {

var csv = data.filter(function(d) {
    return d.set == "JETTA";
  });

  data.forEach(function(d) {
    d.date = parseDate(d.date);
    d.close = +d.close;
    d.set = +d.set;
  });

  



  

  x.domain(d3.extent(data, function(d) { return d.date; }));
  y.domain([0,4]);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

svg.append("text")      // text label for the x axis
        .attr("x", width / 2 )
        .attr("y",  height + margin.bottom)
        .style("text-anchor", "middle")
        .text("AÑOS DE USO");
	

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
      .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 5 - margin.left)
      .attr("x", 0 - (height / 2) + 15)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Calificación");



  svg.append("path")
      .datum(csv)
      .attr("class", "line")
      .attr("d", line);


   
svg.selectAll(".dot")
      .data(csv)
      .enter().append("circle")
      .attr("class", "dot")
      .attr("r", 7)
      .attr("cx", function(d) { return x(d.date); })
      .attr("cy", function(d) { return y(d.close); })
      .style("fill", function(d) { return color(d.close); });


});


function auto(){
var e = document.getElementById("combobox");
var strUser = e.options[e.selectedIndex].text;
d3.selectAll("svg").remove(); 

d3.tsv("data.tsv", type, function(error, data) {

   var csv = data.filter(function(d) {
    return d.set == strUser;
  });
   
  data.forEach(function(d) {
    d.date = parseDate(d.date);
    d.close = +d.close;
    d.set = +d.set;
  });

  

  x.domain(d3.extent(data, function(d) { return d.date; }));
  y.domain([0,4]);

svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

svg.append("text")      
        .attr("x", width / 2 )
        .attr("y",  height + margin.bottom)
        .style("text-anchor", "middle")
        .text("AÑOS DE USO");
	

svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
      .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 5 - margin.left)
      .attr("x", 0 - (height / 2) + 15)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Calificación");

svg.append(".path")
      .datum(csv)
      .attr("class", "line")
      .attr("d", line);

   
svg.selectAll(".dot")
      .data(csv)
      .enter().append("circle")
      .attr("class", "dot")
      .attr("r", 7)
      .attr("cx", function(d) { return x(d.date); })
      .attr("cy", function(d) { return y(d.close); })
      .style("fill", function(d) { return color(d.close); });

});

};








</script>
